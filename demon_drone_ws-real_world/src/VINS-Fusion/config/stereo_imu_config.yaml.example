%YAML:1.0
---
imu: 1
num_of_cam: 2

imu_topic: /mavros/imu/data_raw
image0_topic: /stereo/left/image_raw
image1_topic: /stereo/right/image_raw
output_path: /home/khadas/demon_drone_ws/output

cam0_calib: left.yaml
cam1_calib: right.yaml
image_width: 640
image_height: 480


# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.# 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
  rows: 4
  cols: 4
  dt: d
  data: [0.00770897, -0.15693554, 0.98757876, 0.13163938, -0.99996058, -0.00556121,
    0.00692189, 0.0394114, 0.00440584, -0.98759319, -0.15697223, -0.04328347, 0.0,
    0.0, 0.0, 1.0]
body_T_cam1: !!opencv-matrix
  rows: 4
  cols: 4
  dt: d
  data: [0.00386949, -0.158894, 0.98728807, 0.131812, -0.99998044, -0.00546622, 0.0030395,
    -0.02060892, 0.00491378, -0.98728052, -0.15891204, -0.0428729, 0.0, 0.0, 0.0,
    1.0]
multiple_thread: 1

#feature traker paprameters
max_cnt: 150 #150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.03  # max solver itration time (ms), to guarantee real time # 0.04
max_num_iterations: 4   # max solver itrations, to guarantee real time  # 8
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.363979700869             # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.0442607684828         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.00051330066624  # accelerometer bias random work noise standard deviation.  #0.002
gyr_w: 2.86399259309e-05 # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.806550004006509    # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: -0.04087945481237465             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: /home/ubuntu/Escort_Drone/output/pose_graph/   # save and load path
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
